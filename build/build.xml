<?xml version="1.0" encoding="UTF-8"?>
<project name="Air Native Extension Build Scripts" default="all">

    <!-- Config -->
    <property file="build.properties"/>

    <!-- All -->
    <target name="all" depends="ios,ios-simulator,swc-mobile,package" description="Full build of extension"/>
    <!--<target name="all" depends="ios,ios-simulator,swc-mobile,package,asdoc" description="Full build of extension"/>-->
    <!-- <target name="all" depends="ios,ios-simulator,android,swc-mobile,package,asdoc" description="Full build of extension"/> -->
    <!-- <target name="all" depends="android" description="Full build of extension"/> -->

    <!-- iOS -->
    <target name="ios" description="Build iOS Library">
        <mkdir dir="../temp/ios/build/"/>

        <exec executable="xcodebuild" failonerror="true" dir="../ios/${name}/">
            <arg line="-project ${name}.xcodeproj"/>
            <arg line="-alltargets clean"/>
        </exec>

        <exec executable="xcodebuild" failonerror="true" dir="../ios/${name}/">
            <arg line="-project ${name}.xcodeproj"/>
            <arg line="-sdk ${ios.sdkversion}"/>
            <arg line="-target ${name}"/>
            <arg line="-configuration Release"/>
            <arg line="SYMROOT=../../temp/ios/build/"/>
        </exec>

        <copy file="../temp/ios/build/Release-iphoneos/lib${name}.a" todir="../temp/ios" overwrite="true"/>
        <copy todir="../temp/ios">
            <fileset dir="../temp/ios/build/Release-iphoneos/"/>
        </copy>
        <copy todir="../temp/ios/DomobOfferWallBundle.bundle">
            <fileset dir="../ios/DomobOfferWallBundle.bundle"/>
        </copy>

        <delete dir="../temp/ios/build/"/>
        <delete dir="../ios/${name}/build/"/>
    </target>

    <!-- iOS Simulator -->
    <target name="ios-simulator" description="Build iOS Simulator Library">
        <mkdir dir="../temp/ios-simulator/build/"/>

        <exec executable="xcodebuild" failonerror="true" dir="../ios/${name}/">
            <arg line="-project ${name}.xcodeproj"/>
            <arg line="-alltargets clean"/>
        </exec>

        <exec executable="xcodebuild" failonerror="true" dir="../ios/${name}/">
            <arg line="-project ${name}.xcodeproj"/>
            <arg line="-arch i386"/>
            <arg line="-sdk ${ios.simulatorsdkversion}"/>
            <arg line="-target ${name}"/>
            <arg line="-configuration Release"/>
            <arg line="SYMROOT=../../temp/ios-simulator/build/"/>
        </exec>

        <copy file="../temp/ios-simulator/build/Release-iphonesimulator/lib${name}.a" todir="../temp/ios-simulator" overwrite="true"/>
        <copy todir="../temp/ios/DomobOfferWallBundle.bundle">
            <fileset dir="../ios/DomobOfferWallBundle.bundle"/>
        </copy>
        
        <copy todir="../temp/ios-simulator/DomobOfferWallBundle.bundle">
            <fileset dir="../ios/DomobOfferWallBundle.bundle"/>
        </copy>

        <delete dir="../temp/ios-simulator/build/"/>
        <delete dir="../ios/${name}/build/"/>
    </target>

    <!-- Android -->
    <target name="android" description="Build Android Library">
        <delete dir="../android/temp"/>
        <mkdir dir="../android/temp/classes"/>

        <echo message="Using Java version ${ant.java.version}."/>

        <javac source="1.6" srcdir="../android/src" destdir="../android/temp/classes" includeantruntime="false" encoding="utf-8">
            <classpath>
                <pathelement location="${android.sdk}/android.jar"/>
                <pathelement location="${FLEX_HOME}/lib/android/FlashRuntimeExtensions.jar"/>
                <pathelement location="../android/libs/android-support-v4.jar"/>
                <pathelement location="../android/libs/${android.extlibname}"/>
            </classpath>
        </javac>

        <mkdir dir="../android/temp/zip"/>
        <copydir src="../android/temp/zip" dest="../android/temp/classes"/>

        <mkdir dir="../temp/android/"/>
        <jar basedir="../android/temp/classes" destfile="../temp/android/lib${name}.jar"/>
        <copy file="../android/libs/${android.extlibname}" todir="../temp/android/" overwrite="true"/>
        <!--<copy todir="../temp/android/res/">
            <fileset dir="../android/res/"/>
        </copy>-->
        <delete dir="../android/temp"/>
    </target>

    <!-- Actionscript mobile -->
    <target name="swc-mobile" description="Build SWC library">
        <mkdir dir="../temp/swc/content/"/>

        <fileset dir="../actionscript/src" casesensitive="yes" id="classfiles">
            <include name="**/*.as"/>
        </fileset>

        <pathconvert property="classlist" refid="classfiles" pathsep=" " dirsep=".">
            <regexpmapper from=".*src.(.*)\.as" to="\1"/>
        </pathconvert>

        <exec executable="${FLEX_HOME}/bin/compc${bin.ext}" failonerror="true">
            <env key="AIR_SDK_HOME" value="${FLEX_HOME}"/>
            <arg line='-source-path ../actionscript/src'/>
            <arg line='-output ../temp/swc/${name}.swc'/>
            <arg line='-swf-version=14'/>
            <arg line='-external-library-path+="${FLEX_HOME}/frameworks/libs/air/airglobal.swc"'/>
            <arg line='-include-classes ${classlist}'/>
        </exec>

        <unzip src="../temp/swc/${name}.swc" dest="../temp/swc/content" overwrite="true"/>

        <copy file="../temp/swc/content/library.swf" todir="../temp/ios" overwrite="true"/>
        <copy file="../temp/swc/content/library.swf" todir="../temp/ios-simulator" overwrite="true"/>
        <copy file="../temp/swc/content/library.swf" todir="../temp/default" overwrite="true"/>
        <!--<copy file="../temp/swc/content/library.swf" todir="../temp/android" overwrite="true"/>-->
        <delete dir="../temp/swc/content/"/>
    </target>

    <!-- Actionscript default (for AIR simulator) -->
    <!-- 现在已经写一个swc两个一起用了，请在函数调用前加上if (extension) -->
    <!--<target name="swc-default" description="Build SWC library">
        <mkdir dir="../temp/swc/content/"/>

        <fileset dir="../actionscript-default/src" casesensitive="yes" id="classfiles">
            <include name="**/*.as"/>
        </fileset>

        <pathconvert property="classlist" refid="classfiles" pathsep=" " dirsep=".">
            <regexpmapper from=".*src.(.*)\.as" to="\1"/>
        </pathconvert>

        <exec executable="${FLEX_HOME}/bin/compc${bin.ext}" failonerror="true">
            <env key="AIR_SDK_HOME" value="${FLEX_HOME}"/>
            <arg line='-source-path ../actionscript-default/src'/>
            <arg line='-output ../temp/swc/${name}.swc'/>
            <arg line='-swf-version=14'/>
            <arg line='-external-library-path+="${FLEX_HOME}/frameworks/libs/air/airglobal.swc"'/>
            <arg line='-include-classes ${classlist}'/>
        </exec>

        <unzip src="../temp/swc/${name}.swc" dest="../temp/swc/content" overwrite="true"/>
        <copy file="../temp/swc/content/library.swf" todir="../temp/default" overwrite="true"/>
        <delete dir="../temp/swc/content/"/>
    </target>-->

    <!-- generate inline documentation that will allow auto-completion -->
    <target name="inline-doc" description="generate the asdoc and put it into the temp folder">
        <exec executable="${FLEX_HOME}/bin/asdoc${bin.ext}" failonerror="true">
            <env key="FLEX_HOME" value="${FLEX_HOME}"/>
            <env key="FALCON_HOME" value="${FLEX_HOME}"/>
            <arg line='-source-path ../actionscript/src'/>
            <arg line='-doc-sources ../actionscript/src'/>
            <arg line='-output ../temp/doc'/>
            <arg line='-keep-xml -skip-xsl'/>
            <arg line='-library-path+="${FLEX_HOME}/frameworks/libs/air/airglobal.swc"'/>
        </exec>
    </target>

    <!-- Package -->
    <target name="package" description="Create the extension package">
        <exec executable="${FLEX_HOME}/bin/adt${bin.ext}" failonerror="true" dir="../temp">
            <arg value="-package"/>
            <arg value="-target"/>
            <arg value="ane"/>
            <arg value="${name}.ane"/>
            <arg value="../build/extension.xml"/>
            <arg line="-swc swc/${name}.swc"/>
            <arg line="-platform iPhone-ARM -platformoptions ../build/platform.xml -C ios/ ."/>
            <arg line="-platform iPhone-x86 -C ios-simulator/ ."/>
            <!--<arg line="-platform Android-ARM -platformoptions ../build/platform-android.xml -C android/ ."/>-->
            <arg line="-platform default -C default/ ."/>
        </exec>

        <!-- <zip destfile="../temp/${name}.ane" update="true">
            <zipfileset dir="../temp/doc/tempdita" prefix="docs">
                <include name="*.*"/>
                <exclude name="ASDoc_Config.xml"/>
                <exclude name="overviews.xml"/>
            </zipfileset>
        </zip> -->
        <copy file="../temp/${name}.ane" todir="../test/libs" overwrite="true"/>
        <move file="../temp/${name}.ane" todir="../bin"/>
        <delete dir="../temp"/>
    </target>

    <!-- generate documentation -->
    <!-- this target is not part of the normal compile time, it will generate html asdoc for documentation purposes -->
    <target name="asdoc" description="generate the asdoc in readable html">
        <exec executable="${FLEX_HOME}/bin/asdoc${bin.ext}" failonerror="true">
            <env key="FLEX_HOME" value="${FLEX_HOME}"/>
            <env key="FALCON_HOME" value="${FLEX_HOME}"/>
            <arg line='-source-path ../actionscript/src'/>
            <arg line='-doc-sources ../actionscript/src'/>
            <arg line='-output ../docs'/>
            <arg line='-library-path+="${FLEX_HOME}/frameworks/libs/air/airglobal.swc"'/>
        </exec>
    </target>

</project>
